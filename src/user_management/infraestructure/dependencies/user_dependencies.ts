import { ActivateUserUseCase } from "../../application/use_case/ActivateUserUseCase";
import { DeleteUserUseCase } from "../../application/use_case/DeleteUserUseCase";
import { FindUserByUbicationUseCase } from "../../application/use_case/FindUserByUbicationUseCase";
import { GetByTagUserUseCase } from "../../application/use_case/GetByTagUserUseCase";
import { GetByUbicationUserUseCase } from "../../application/use_case/GetByUbicationUserUseCase";
import { GetByUserUseCase } from "../../application/use_case/GetByUserUseCase";
import { ListUsersProvidersUseCase } from "../../application/use_case/ListUsersProvidersUseCase";
import { ListUsersUseCase } from "../../application/use_case/ListUsersUseCase";
import { RefreshUserUseCase } from "../../application/use_case/RefreshUserUseCase";
import { SignInProviderUserUseCase } from "../../application/use_case/SignInProviderUserUseCase";
import { SignInUserUseCase } from "../../application/use_case/SignInUserUseCase";
import { SignOutUserUseCase } from "../../application/use_case/SignOutUserUseCase";
import { SignUpUserProviderUseCase } from "../../application/use_case/SignUpUserProviderUseCase";
import { SignUpUserUseCase } from "../../application/use_case/SignUpUserUseCase";
import { UpdatePasswordUserUseCase } from "../../application/use_case/UpdatePasswordUserUseCase";
import { UpdatePlanUserUseCase } from "../../application/use_case/UpdatePlanUserUseCase";
import { UpdateProfileUserUseCase } from "../../application/use_case/UpdateProfileUserUseCase";
import { UpdateRoleUserUseCase } from "../../application/use_case/UpdateRoleUserUseCase";
import { UpdateUbicationUseCase } from "../../application/use_case/UpdateUbicationUseCase";
import { UpdateUserUseCase } from "../../application/use_case/UpdateUserUseCase";
import { ActivateUserController } from "../controllers/ActivateUserController";
import { DeleteUserController } from "../controllers/DeleteUserController";
import FindUserByUbicationController from "../controllers/FindUserByUbicationController";
import GetUserByEmailController from "../controllers/GetUserByEmailController";
import GetUserByTagUuidController from "../controllers/GetUserByTagUuidController";
import GetUserByUbicationController from "../controllers/GetUserByUbicationController";
import GetUserByUuidController from "../controllers/GetUserByUuidController";
import { ListUsersController } from "../controllers/ListUsersController";
import { ListUsersProvidersController } from "../controllers/ListUsersProvidersController";
import { RefreshTokenUserController } from "../controllers/RefreshTokenUserController";
import { SignInUserController } from "../controllers/SignInUserController";
import { SignOutUserController } from "../controllers/SignOutUserController";
import { SingUpUserController } from "../controllers/SignUpUserController";
import { SignUpUserProvidersController } from "../controllers/SignUpUserProvidersController";
import { SingInProviderUserController } from "../controllers/SingInProviderUserController";
import { UpdatePasswordUserController } from "../controllers/UpdatePasswordController";
import { UpdatePlanUserController } from "../controllers/UpdatePlanUserController";
import { UpdateProfileUserController } from "../controllers/UpdateProfileUserController";
import { UpdateRoleUserController } from "../controllers/UpdateRoleUserController";
import { UpdateUbicationController } from "../controllers/UpdateUbicationController";
import { UpdateUserController } from "../controllers/UpdateUserController";
import { ValidateUserController } from "../controllers/ValidateUserController";
import { MysqlUserRepository } from "../repositories/MysqlUserRepository";
import { ByEncryptServices } from "../services/ByEncryptServices";
import { NodemailerEmailService } from "../services/NodemailerEmailService";
import { TokenAuthServices } from "../services/TokenServices";
import { UserSagaImpl } from "../services/UserSagaImpl";

const userRepository = new MysqlUserRepository();
const encryptServices = new ByEncryptServices();
const emailService = new NodemailerEmailService();
const tokenServices = new TokenAuthServices();
const userSaga = new UserSagaImpl();

export const signUpUserCase = new SignUpUserUseCase(userRepository);
export const getUserUseCase = new GetByUserUseCase(userRepository);
export const updateUserUseCase = new UpdateUserUseCase(userRepository);
export const deleteUserUseCase = new DeleteUserUseCase(userRepository);
export const listUsersCase = new ListUsersUseCase(userRepository);
export const activateUserCase = new ActivateUserUseCase(userRepository);
export const signInUserCase = new SignInUserUseCase(userRepository);
export const signOutUserCase = new SignOutUserUseCase(userRepository);
export const signInProviderUserUseCase = new SignInProviderUserUseCase(userRepository);
export const updatePasswordUserUseCase = new UpdatePasswordUserUseCase(userRepository);
export const updatePlanUserUseCase = new UpdatePlanUserUseCase(userRepository);
export const updateProfileUserUseCase = new UpdateProfileUserUseCase(userRepository);
export const updateRoleUserUseCase = new UpdateRoleUserUseCase(userRepository);
export const updateUbicationUseCase = new UpdateUbicationUseCase(userRepository);
export const listUsersProviderCase = new ListUsersProvidersUseCase(userRepository);
export const signUpUserProviderCase = new SignUpUserProviderUseCase(userRepository);
export const refreshTokenUseCase = new RefreshUserUseCase(userRepository);
export const getByTagUseCase = new GetByTagUserUseCase(userRepository);
export const getByUbicationUseCase = new GetByUbicationUserUseCase(userRepository);
export const findUserByUbicationUseCase = new FindUserByUbicationUseCase(userRepository);


export const signInUserController = new SignInUserController(signInUserCase);
export const signUpUserController = new SingUpUserController(signUpUserCase, emailService);
export const deleteUserController = new DeleteUserController(deleteUserUseCase);
export const getByUuidController = new GetUserByUuidController(getUserUseCase);
export const getByEmailController = new GetUserByEmailController(getUserUseCase);
export const updateUserController = new UpdateUserController(updateUserUseCase);
export const listUsersController = new ListUsersController(listUsersCase);
export const activateUserController = new ActivateUserController(activateUserCase);
export const signOutUserController = new SignOutUserController(signOutUserCase, userSaga);
export const signInProviderUserController = new SingInProviderUserController(signInProviderUserUseCase);
export const updatePasswordUserController = new UpdatePasswordUserController(updatePasswordUserUseCase);
export const updatePlanUserController = new UpdatePlanUserController(updatePlanUserUseCase);
export const updateProfileUserController = new UpdateProfileUserController(updateProfileUserUseCase);
export const updateRoleUserController = new UpdateRoleUserController(updateRoleUserUseCase);
export const updateUbicationController = new UpdateUbicationController(updateUbicationUseCase);
export const listUsersProvidersController = new ListUsersProvidersController(listUsersProviderCase);
export const signUpUserProviderController = new SignUpUserProvidersController(signUpUserProviderCase, emailService);
export const refreshTokenUserController = new RefreshTokenUserController(refreshTokenUseCase);
export const getByTagUuidController = new GetUserByTagUuidController(getByTagUseCase);
export const getByUbicationController = new GetUserByUbicationController(getByUbicationUseCase);
export const findUserByUbicationController = new FindUserByUbicationController(findUserByUbicationUseCase);
export const validateUserController = new ValidateUserController();