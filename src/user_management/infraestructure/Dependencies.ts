import { DeleteUserUseCase } from "../application/use_case/DeleteUserUseCase";
import { ActivateUserUseCase } from "../application/use_case/ActivateUserUseCase";
import { GetByUserUseCase } from "../application/use_case/GetByUserUseCase";
import { ListUsersUseCase } from "../application/use_case/ListUsersUseCase";
import { SignInUserUseCase } from "../application/use_case/SignInUserUseCase";
import { SignOutUserUseCase } from "../application/use_case/SignOutUserUseCase";
import { SignUpUserUseCase } from "../application/use_case/SignUpUserUseCase";
import { UpdateUserUseCase } from "../application/use_case/UpdateUserUseCase";
import { ActivateUserController } from "./controllers/ActivateUserController";
import { DeleteUserController } from "./controllers/DeleteUserController";
import GetUserByEmailController from "./controllers/GetUserByEmailController";
import GetUserByUuidController from "./controllers/GetUserByUuidController";
import { ListUsersController } from "./controllers/ListUsersController";
import { SignInUserController } from "./controllers/SignInUserController";
import { SignOutUserController } from "./controllers/SignOutUserController";
import { SingUpUserController } from "./controllers/SignUpUserController";
import { UpdateUserController } from "./controllers/UpdateUserController";
import { MysqlUserRepository } from "./repositories/MysqlUserRepository";
import { ByEncryptServices } from "./services/ByEncryptServices";
import { NodemailerEmailService } from "./services/NodemailerEmailService";
import { TokenAuthServices } from "./services/TokenServices";
import { UserSagaImpl } from "./services/UserSagaImpl";
import { SignInProviderUserUseCase } from "../application/use_case/SignInProviderUserUseCase";
import { UpdatePasswordUserUseCase } from "../application/use_case/UpdatePasswordUserUseCase";
import { UpdatePlanUserUseCase } from "../application/use_case/UpdatePlanUserUseCase";
import { UpdateProfileUserUseCase } from "../application/use_case/UpdateProfileUserUseCase";
import { UpdateRoleUserUseCase } from "../application/use_case/UpdateRoleUserUseCase";
import { UpdateUbicationUseCase } from "../application/use_case/UpdateUbicationUseCase";
import { SingInProviderUserController } from "./controllers/SingInProviderUserController";
import { UpdatePasswordUserController } from "./controllers/UpdatePasswordController";
import { UpdatePlanUserController } from "./controllers/UpdatePlanUserController";
import { UpdateProfileUserController } from "./controllers/UpdateProfileUserController";
import { UpdateRoleUserController } from "./controllers/UpdateRoleUserController";
import { UpdateUbicationController } from "./controllers/UpdateUbicationController";
import { ListUsersProvidersUseCase } from "../application/use_case/ListUsersProvidersUseCase";
import { SignUpUserProviderUseCase } from "../application/use_case/SignUpUserProviderUseCase";
import { ListUsersProvidersController } from "./controllers/ListUsersProvidersController";
import { SignUpUserProvidersController } from "./controllers/SignUpUserProvidersController";
import { RefreshUserUseCase } from "../application/use_case/RefreshUserUseCase";
import exp from "constants";
import { RefreshTokenUserController } from "./controllers/RefreshTokenUserController";
import { GetByTagUserUseCase } from "../application/use_case/GetByTagUserUseCase";
import GetUserByTagUuidController from "./controllers/GetUserByTagUuidController";
import { GetByUbicationUserUseCase } from "../application/use_case/GetByUbicationUserUseCase";
import GetUserByUbicationController from "./controllers/GetUserByUbicationController";

export const encriptServices = new ByEncryptServices();
export const nodemailerEmailService = new NodemailerEmailService();
export const tokenServices = new TokenAuthServices();
export const userSaga = new UserSagaImpl();

export const databaseRepository = new MysqlUserRepository(encriptServices, tokenServices);

export const singUpUserCase = new SignUpUserUseCase(databaseRepository);
export const getUserUseCase = new GetByUserUseCase(databaseRepository);
export const updateUserUseCase = new UpdateUserUseCase(databaseRepository);
export const deleteUserUseCase = new DeleteUserUseCase(databaseRepository);
export const listUsersCase = new ListUsersUseCase(databaseRepository);
export const activateUserCase = new ActivateUserUseCase(databaseRepository);
export const singInUserCase = new SignInUserUseCase(databaseRepository);
export const singOutUserCase = new SignOutUserUseCase(databaseRepository);
export const signInProviderUserUseCase = new SignInProviderUserUseCase(databaseRepository);
export const updatePasswordUserUseCase = new UpdatePasswordUserUseCase(databaseRepository);
export const updatePlanUserUseCase = new UpdatePlanUserUseCase(databaseRepository);
export const updateProfileUserUseCase = new UpdateProfileUserUseCase(databaseRepository);
export const updateRoleUserUseCase = new UpdateRoleUserUseCase(databaseRepository);
export const updateUbicationUseCase = new UpdateUbicationUseCase(databaseRepository);
export const listUsersProviderCase = new ListUsersProvidersUseCase(databaseRepository);
export const singUpUserProviderCase = new SignUpUserProviderUseCase(databaseRepository);
export const refreshTokenUseCase = new RefreshUserUseCase(databaseRepository);
export const getByTagUseCase = new GetByTagUserUseCase(databaseRepository);
export const getByUbicationUseCase = new GetByUbicationUserUseCase(databaseRepository);

export const signInUserController = new SignInUserController(singInUserCase);
export const signUpUserController = new SingUpUserController(singUpUserCase, nodemailerEmailService);
export const deleteUserController = new DeleteUserController(deleteUserUseCase);
export const getByUuidController = new GetUserByUuidController(getUserUseCase);
export const getByEmailController = new GetUserByEmailController(getUserUseCase);
export const updateUserController = new UpdateUserController(updateUserUseCase);
export const listUsersController = new ListUsersController(listUsersCase);
export const activateUserController = new ActivateUserController(activateUserCase);
export const signOutUserController = new SignOutUserController(singOutUserCase, userSaga);
export const signInProviderUserController = new SingInProviderUserController(signInProviderUserUseCase);
export const updatePasswordUserController = new UpdatePasswordUserController(updatePasswordUserUseCase);
export const updatePlanUserController = new UpdatePlanUserController(updatePlanUserUseCase);
export const updateProfileUserController = new UpdateProfileUserController(updateProfileUserUseCase);
export const updateRoleUserController = new UpdateRoleUserController(updateRoleUserUseCase);
export const updateUbicationController = new UpdateUbicationController(updateUbicationUseCase);
export const listUsersProvidersController = new ListUsersProvidersController(listUsersProviderCase);
export const signUpUserProviderController = new SignUpUserProvidersController(singUpUserProviderCase, nodemailerEmailService);
export const refreshTokenUserController = new RefreshTokenUserController(refreshTokenUseCase);
export const getByTagUuidController = new GetUserByTagUuidController(getByTagUseCase);
export const getByUbicationController = new GetUserByUbicationController(getByUbicationUseCase);